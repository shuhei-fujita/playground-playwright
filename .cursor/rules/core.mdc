---
description: Core Playwright TypeScript rules / 基本ルール
globs:
alwaysApply: true
---

# Playwright TypeScript E2Eテスト - 基本ルール / Core Rules

## プロジェクト概要 / Project Overview

### 目的 / Purpose
- Webアプリケーションの品質向上とバグ検出 / Improve web application quality and detect bugs
- 継続的インテグレーション（CI）における自動テストの実行 / Execute automated tests in continuous integration (CI)
- Page Object Modelパターンによる保守性の高いテストコードの実現 / Achieve maintainable test code through Page Object Model pattern

### 技術スタック / Tech Stack
- **Playwright**: v1.46.0 - E2Eテスト自動化 / E2E test automation
- **TypeScript**: 型安全なJavaScript実行環境 / Type-safe JavaScript runtime
- **Node.js**: JavaScript実行環境 / JavaScript runtime

### 特徴 / Features
- TypeScriptによる型安全なテストコード / Type-safe test code with TypeScript
- Chromium、Firefox、WebKit対応のクロスブラウザテスト / Cross-browser testing with Chromium, Firefox, WebKit
- 日本語でのテストケース記述に対応 / Support for Japanese test case descriptions
- Visual Regression Testing (VRT) サポート / Visual Regression Testing (VRT) support
- HTMLレポートによる結果可視化 / Result visualization with HTML reports

## 関連ルール参照 / Related Rules Reference

詳細なルールは以下を参照 / For detailed rules, refer to:

- **セキュリティ / Security**: → [security.mdc](security.mdc)
- **セレクター戦略 / Selector Strategy**: → [selectors.mdc](selectors.mdc)  
- **アーキテクチャ / Architecture**: → [architecture.mdc](architecture.mdc)
- **品質基準 / Quality Standards**: → [quality.mdc](quality.mdc)

## パフォーマンス設定 / Performance Configuration

### 並行実行 / Parallel Execution
```typescript
export default defineConfig({
  fullyParallel: true,
  workers: process.env.CI ? 1 : undefined,
});
```

### エラーハンドリング / Error Handling
```typescript
export default defineConfig({
  retries: process.env.CI ? 2 : 0,
  use: {
    trace: 'on-first-retry',
    screenshot: 'only-on-failure',
    video: 'retain-on-failure',
  },
});
## 関連ルール参照 / Related Rules Reference

詳細なルールは以下を参照 / For detailed rules, refer to:

- **セキュリティ / Security**: → [security.mdc](security.mdc)
- **セレクター戦略 / Selector Strategy**: → [selectors.mdc](selectors.mdc)  
- **アーキテクチャ / Architecture**: → [architecture.mdc](architecture.mdc)
- **品質基準 / Quality Standards**: → [quality.mdc](quality.mdc)
- **テスト構造 / Test Structure**: → [test-structure.mdc](test-structure.mdc)
- **テスト出力管理 / Test Output Management**: → [test-outputs.mdc](test-outputs.mdc)

## パフォーマンス設定 / Performance Configuration

### 並行実行 / Parallel Execution
```typescript
export default defineConfig({
  fullyParallel: true,
  workers: process.env.CI ? 1 : undefined,
});
```

### エラーハンドリング / Error Handling
```typescript
export default defineConfig({
  retries: process.env.CI ? 2 : 0,
  use: {
    trace: 'on-first-retry',
    screenshot: 'only-on-failure',
    video: 'retain-on-failure',
  },
});
```