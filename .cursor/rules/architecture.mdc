---
description: Architecture rules for Playwright tests / アーキテクチャルール
globs:
alwaysApply: false
---

# アーキテクチャルール / Architecture Rules

## Page Object Model（必須） / Page Object Model (Required)

### 基本構造 / Basic Structure
```typescript
export class PageName extends BasePage {
  readonly elementName: Locator;
  
  constructor(page: Page) {
    super(page);
    this.elementName = this.getByRoleSafe('button', { name: 'Submit' });
  }
  
  async actionMethod(): Promise<void> {
    // 実装 / Implementation
  }
}
```

### ディレクトリ構成（実装準拠） / Directory Structure (Implementation-based)
```
tests/
├── pages/           # Page Objectクラス / Page Object classes
│   ├── BasePage.ts              # 基底クラス / Base class
│   ├── PlaywrightDevPage.ts     # VRT・公式サイト用 / VRT & official site
│   ├── W3SchoolsFormPage.ts     # iframe・外部フォーム用 / iframe & external form
│   ├── CSVTestPage.ts           # データ駆動テスト用 / Data-driven testing
│   └── LocatorTestPage.ts       # セレクター戦略デモ用 / Selector strategy demo
├── fixtures/        # テストフィクスチャ / Test fixtures
│   └── TestFixtures.ts          # 認証・ロギング・Page注入 / Auth, logging, Page injection
├── utils/          # ユーティリティ / Utilities
│   ├── TestConfig.ts            # 環境設定・認証情報管理 / Config & credentials
│   ├── TestLogger.ts            # 統一ログ・ステップ追跡 / Unified logging
│   └── QualityBaseline.ts       # 品質チェック・評価基準 / Quality baseline
├── data/           # テストデータ / Test data
│   ├── TestData.ts              # 静的・動的データ生成 / Static & dynamic data
│   └── test.csv                 # CSV駆動テスト用 / CSV-driven testing
├── archive/        # 品質向上対象外（参考実装） / Reference implementations
│   └── *.spec.ts               # 段階的改善対象ファイル / Gradual improvement targets
├── VRT.spec.ts     # Visual Regression Testing
├── auth.setup.ts   # 認証セットアップ / Authentication setup
└── *-snapshots/    # VRTベースライン画像 / VRT baseline images
```

## 命名規則 / Naming Conventions

### ファイル命名 / File Naming
- テストファイル: `*.spec.ts` / Test files: `*.spec.ts`
- Page Object: `*Page.ts`
- ユーティリティ: `*.util.ts` / Utilities: `*.util.ts`

### クラス命名 / Class Naming
- Page Object: `XxxPage extends BasePage`
- テストデータ: `XxxTestData`
- ユーティリティ: `XxxUtil`

## expect/assert配置戦略 / Expect/Assert Placement Strategy

### 基本方針（Playwright公式準拠） / Basic Policy (Playwright Official Compliant)
- **Page Object内**: アクション実行時の基本成功確認 / Basic success verification for actions
- **テストファイル内**: テスト固有の詳細検証 / Test-specific detailed verification

### 詳細ルール / Detailed Rules
- **詳細ガイド**: [expect-strategy.mdc](expect-strategy.mdc)

## 関連ドキュメント / Related Documents

詳細なアーキテクチャ図・実装例は docs/architecture/ を参照してください。

For detailed architecture diagrams and implementation examples, refer to docs/architecture/.

## 参考 / References
- https://playwright.dev/docs/pom
