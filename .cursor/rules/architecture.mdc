---
description: Architecture rules for Playwright tests / アーキテクチャルール
globs:
alwaysApply: false
---

# アーキテクチャルール / Architecture Rules

## Page Object Model（必須） / Page Object Model (Required)

### 基本構造 / Basic Structure
```typescript
export class PageName extends BasePage {
  readonly elementName: Locator;
  
  constructor(page: Page) {
    super(page);
    this.elementName = this.getByRoleSafe('button', { name: 'Submit' });
  }
  
  async actionMethod(): Promise<void> {
    // 実装 / Implementation
  }
}
```

### ディレクトリ構成（必須） / Directory Structure (Required)
```
tests/
├── pages/           # Page Objectクラス / Page Object classes
│   ├── BasePage.ts  # 基底クラス / Base class
│   └── *.page.ts    # 各ページのPage Object / Page Object for each page
├── fixtures/        # テストフィクスチャ / Test fixtures
├── utils/          # ユーティリティ / Utilities
├── data/           # テストデータ / Test data
├── archive/        # 品質チェック対象外ファイル / Files excluded from quality checks
└── *.spec.ts       # テストファイル / Test files
```

## 命名規則 / Naming Conventions

### ファイル命名 / File Naming
- テストファイル: `*.spec.ts` / Test files: `*.spec.ts`
- Page Object: `*Page.ts`
- ユーティリティ: `*.util.ts` / Utilities: `*.util.ts`

### クラス命名 / Class Naming
- Page Object: `XxxPage extends BasePage`
- テストデータ: `XxxTestData`
- ユーティリティ: `XxxUtil`